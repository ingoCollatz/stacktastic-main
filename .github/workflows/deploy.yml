name: Deploy stacktastic

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build --pull \
            --build-arg CONTACT_RECEIVER=${{ secrets.CONTACT_RECEIVER }} \
            --build-arg MAIL_HOST=${{ secrets.MAIL_HOST }} \
            --build-arg MAIL_PORT=${{ secrets.MAIL_PORT }} \
            --build-arg MAIL_USER=${{ secrets.MAIL_USER }} \
            --build-arg MAIL_PASS=${{ secrets.MAIL_PASS }} \
            --build-arg FRIENDLY_CAPTCHA_SECRET=${{ secrets.FRIENDLY_CAPTCHA_SECRET }} \
            -t stacktastic-${{ github.ref_name }}:${{ github.sha }} .
          docker save stacktastic-${{ github.ref_name }}:${{ github.sha }} | gzip > image.tar.gz

      - name: Copy image and docker-compose to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "image.tar.gz,docker-compose.${{ github.ref_name }}.yml"
          target: "~/stacktastic/${{ github.ref_name }}/"

      - name: SSH and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            cd ~/stacktastic/${{ github.ref_name }}
            gunzip -f image.tar.gz
            docker load < image.tar

            DATABASE_URL=${{ secrets.DATABASE_URL }} \
            API_KEY=${{ secrets.API_KEY }} \
            FRIENDLY_CAPTCHA_SECRET=${{ secrets.FRIENDLY_CAPTCHA_SECRET }} \
            IMAGE_TAG=${{ github.sha }} docker-compose -f docker-compose.${{ github.ref_name }}.yml up -d --force-recreate

            rm -f image.tar
